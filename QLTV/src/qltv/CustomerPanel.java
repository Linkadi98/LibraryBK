/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package qltv;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Iterator;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author Pham Ngoc Minh
 */
public class CustomerPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerPanel
     */
    public CustomerPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        insertBt = new javax.swing.JButton();
        clearAllBt = new javax.swing.JButton();
        showDataBt = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataTable1 = new javax.swing.JTable();

        setPreferredSize(new java.awt.Dimension(946, 520));

        insertBt.setText("Insert");

        clearAllBt.setText("Clear All");

        showDataBt.setText("Show all");

        dataTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(dataTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 934, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(showDataBt, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clearAllBt, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(insertBt, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertBt, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearAllBt, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showDataBt, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    
//    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) { 
//        String path = null;
//        JFileChooser fileChooser = new JFileChooser();
//        int rVal = fileChooser.showOpenDialog(null);
//        if (rVal == JFileChooser.APPROVE_OPTION) {
//            String fileName = fileChooser.getSelectedFile().getName();
//            String dir = fileChooser.getCurrentDirectory().toString();
//            path = dir + "\\" + fileName;
//        }
////        deleteAllRows();
//
//        Vector columns = new Vector();
//        try {
//            FileInputStream file = new FileInputStream(new File(path));
//            XSSFWorkbook workbook = new XSSFWorkbook(file);
//            XSSFSheet sheet = workbook.getSheetAt(0);
//            Iterator<Row> rowIt = sheet.iterator();
//            while (rowIt.hasNext()) {
//                Row row = rowIt.next();
//                Iterator<Cell> cellIt = row.cellIterator();
//                if (row.getRowNum() == 0) {
//                    while (cellIt.hasNext()) {
//                        Cell cell = cellIt.next();
//                        columns.add(cell.getStringCellValue());
//                        ((DefaultTableModel) dataTable1.getModel()).setColumnIdentifiers(columns);
//                    }
//                } else {
//                    Vector<String> rowData = new Vector<String>();
//                    while (cellIt.hasNext()) {
//
//                        Cell cell = cellIt.next();
//                        if (cell.getCellType() == CellType.STRING) {
//                            rowData.add(cell.getStringCellValue());
//                        } else if (cell.getCellType() == CellType.NUMERIC) {
//                            rowData.add(Double.toString(cell.getNumericCellValue()));
//                        }
//                    }
//
//                    ((DefaultTableModel) dataTable1.getModel()).addRow(rowData);
//                }
//            }
//
//        } catch (FileNotFoundException ex) {
//            Logger.getLogger(BookTab.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (IOException ex) {
//            Logger.getLogger(BookTab.class.getName()).log(Level.SEVERE, null, ex);
//        }
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearAllBt;
    private javax.swing.JTable dataTable1;
    private javax.swing.JButton insertBt;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton showDataBt;
    // End of variables declaration//GEN-END:variables
}
